{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Catriel\\\\Desktop\\\\3d-react\\\\src\\\\Rings.js\",\n  _s = $RefreshSig$();\nimport { useFrame } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { Color } from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Rings() {\n  _s();\n  const itemsRef = useRef([]);\n  useFrame((state, delta) => {\n    let elapsed = state.clock.getElapsedTime();\n    for (let i = 0; i < itemsRef.current.length; i++) {\n      let mesh = itemsRef.current[i];\n      let z = (i - 7) * 3.5 + elapsed * 0.4 % 3.5 * 2;\n      let dist = Math.abs(z);\n      mesh.position.set(0, 0, -z);\n      mesh.scale.set(1 - dist * 0.04, 1 - dist * 0.04, 1 - dist * 0.04);\n      let colorScale = 1;\n      if (dist > 2) {\n        colorScale = 1 - (Math.min(dist, 12) - 2) / 10;\n      }\n      colorScale *= 0.5;\n      if (i % 2 == 1) {\n        mesh.material.emissive = new Color(6, 0.15, 0.7).multiplyScalar(colorScale);\n      } else {\n        mesh.material.emissive = new Color(0.1, 0.7, 3).multiplyScalar(colorScale);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].map((v, i) => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      position: [0, 0, 0],\n      ref: el => itemsRef.current[i] = el,\n      children: [/*#__PURE__*/_jsxDEV(\"torusGeometry\", {\n        args: [3.35, 0.05, 16, 100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        emissive: [4, 0.1, 0.4],\n        color: [0, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Rings, \"+F/fDxB5Ojcwhgi/wpGgfNAkAFA=\", false, function () {\n  return [useFrame];\n});\n_c = Rings;\nvar _c;\n$RefreshReg$(_c, \"Rings\");","map":{"version":3,"names":["useFrame","useRef","Color","jsxDEV","_jsxDEV","Fragment","_Fragment","Rings","_s","itemsRef","state","delta","elapsed","clock","getElapsedTime","i","current","length","mesh","z","dist","Math","abs","position","set","scale","colorScale","min","material","emissive","multiplyScalar","children","map","v","castShadow","receiveShadow","ref","el","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["C:/Users/Catriel/Desktop/3d-react/src/Rings.js"],"sourcesContent":["import { useFrame } from \"@react-three/fiber\";\r\nimport { useRef } from \"react\";\r\nimport { Color } from \"three\";\r\n\r\nexport function Rings() {\r\n  const itemsRef = useRef([]);\r\n\r\n  useFrame((state, delta) => {\r\n    let elapsed = state.clock.getElapsedTime();\r\n\r\n    for (let i = 0; i < itemsRef.current.length; i++) {\r\n      let mesh = itemsRef.current[i];\r\n      let z = (i - 7) * 3.5 + ((elapsed * 0.4) % 3.5) * 2;\r\n      let dist = Math.abs(z);\r\n      mesh.position.set(0, 0, -z);\r\n      mesh.scale.set(1 - dist * 0.04, 1 - dist * 0.04, 1 - dist * 0.04);\r\n\r\n      let colorScale = 1;\r\n      if (dist > 2) {\r\n        colorScale = 1 - (Math.min(dist, 12) - 2) / 10;\r\n      }\r\n      colorScale *= 0.5;\r\n\r\n      if (i % 2 == 1) {\r\n        mesh.material.emissive = new Color(6, 0.15, 0.7).multiplyScalar(colorScale);\r\n      } else {\r\n        mesh.material.emissive = new Color(0.1, 0.7, 3).multiplyScalar(colorScale);\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].map((v, i) => (\r\n        <mesh\r\n          castShadow\r\n          receiveShadow\r\n          position={[0, 0, 0]}\r\n          key={i}\r\n          ref={(el) => (itemsRef.current[i] = el)}\r\n        >\r\n          <torusGeometry args={[3.35, 0.05, 16, 100]} />\r\n          <meshStandardMaterial emissive={[4, 0.1, 0.4]} color={[0, 0, 0]} />\r\n        </mesh>\r\n      ))}\r\n    </>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}